!
! Things to create on startup when nothing to create is explicitly
! specified on the command line...
!
! If you want a clock to come up by default, have the resource
!
! *set.user: clock
!
! in your .dashrc (or Dash*set.user: clock in .Xresources).
!
*set.default:				athena user

!
! Of course, there aren't really any such things as "athena" and
! "user." Why should things be so simple? Here's what we really mean
! when we say those things...
!
*set.athena:				menubar
*set.user:				_userTree

*set.menubar:				_menuTree
*set.logout:				_logoutButton
*set.clock:				_clockTree

!
! Some generally used resources...
!
*checkTickets:				True
*Window.clientMessageProc:		message()
*borderWidth:				1
*Button.borderWidth:			0

!
! A bit of backwards compatibility... Ideally, default for
! *set.user is NULL. Don't use userTree. Set *set.user instead.
!
*userTree.tree:				{ NULL foo; }

!
! Clock (created by a menu option or "dash -clock")
!
*clockTree.tree:						\
{								\
  Window clockWindow;						\
    {								\
      Form clockForm;						\
        {							\
          AnalogClock a;					\
        }							\
    }								\
}

*clockWindow.defGeometry:		164x164+0-0
*clockWindow.title:			xclock
*clockWindow.deleteProc:		deleteParent()
*clockForm*form:			a: 0 0 100 100
*a.update:				60

!
! The logout button
!
*logoutButton.tree:						\
{								\
  Window window;						\
    {								\
      Button button;						\
        {							\
          Label label;						\
        }							\
    }								\
}

*logoutButton.window.title:		Logout
*logoutButton.window.geometry:		-0-0
*logoutButton*button.activateProc:  \
    createTree("logoutDialog"),mapTree("logoutDialog"),warpTree("logoutDialog")
*logoutButton*label.Center:		True
*logoutButton*label.font:		*-times-bold-i-*--24-*
*logoutButton*label.label:		Logout

*logoutButton.window.cursorCode:	88
*logoutButton.window.deleteProc: 	deleteParent()

!
! Logout dialog
!
*logoutDialog.tree:						\
{								\
  Window window;						\
    {								\
      Form form;						\
        {							\
	  Label dashLogo;					\
	  Label question;					\
	  Window yes; { Button yes; { Label yes; } }		\
	  Window no; { Button no; { Label no; } }		\
        }							\
    }								\
}

*logoutDialog.window.mapped:		False
*logoutDialog*form.form:		dashLogo: 0 0 - -	\
					yes: 10 - - 95		\
					no: - - 90 95		\
					question: 0 35 100 -
*logoutDialog*form.padding:		2

*logoutDialog*window.geometry:		415x150+318+326
*logoutDialog*window.title:		You sure?
*logoutDialog*window.rootTransient:	True

*logoutDialog*Label.font:		*-times-medium-r-*--18-*
*logoutDialog*yes.label:		Yes, logout
*logoutDialog*yes.activateProc:		unmapTree("logoutDialog"),logout()
*logoutDialog*no.label:			No, continue this session
*logoutDialog*no.activateProc:		unmapTree("logoutDialog")
*logoutDialog*question.label:		Do you really want to logout?
*logoutDialog*question.font:		*-times-medium-i-*--24-*
*logoutDialog*question.Center:		True

!
! The menu bar
!
*menuTree.tree:\
{								\
  Window window;						\
    {								\
      Menu menuBar;						\
      DigitalClock menuClock;					\
    }								\
}

*menuTree.window.title:			Menu Bar
*menuTree.window.geometry:		+0+0
*menuTree.window.cursorCode:		60
*menuTree.window.overrideRedirect:	True
*menuTree.window.borderWidth:		0

*menuBar.font:				*-*schoolbook-medium-r-*--14-*
*menuBar.helpPixmap:			question
*menuBar.submenuPixmap:			arrow
*Menu.file:				/usr/athena/lib/Dash.menus
*Menu.fallbackFile:			/usr/athena/lib/Dash.fallback
*menuBar.grey:				gray
*menuBar.verifyProc:			verify()
*menuBar.moveMenus:			True
*menuBar.screenWidth:			True
*menuBar.rightJet:			menuClock

*menuClock.justify:			right
*menuClock.padding:			10
*menuClock.Center:			True
*menuClock.x:				0
*menuClock.y:				0
*menuClock.width:			1024
*menuClock.height:			22
*menuClock.font:			*-*schoolbook-medium-r-*--14-*
*menuClock.update:			5
*menuClock.format:			%.3w %.3n %2D %02e:%02m %C%Y

!
! Start foo?
!
!*startString:				Start %s?
*lqWindow.title:			Dash
*lqWindow.geometry:			400x140+318+326
*lqWindow.rootTransient:		True
*lqWindow*Label.Center:			True
*lqYLabel.label:			Yes
*lqNLabel.label:			No
*lqWindow*Label.font:			*-times-medium-r-*--18-*
*lqWindow*lqLabel.font:			*-times-medium-i-*--24-*

*lqForm.form:				dashLogo: 0 0 - -		\
					lqLabel: 0 35 100 -		\
					lqYWindow: 10 - 40 90		\
					lqNWindow: 60 - 90 90

!
! Bar exited with status baz
!
*warnWindow.title:			Dash
*warnWindow.geometry:			420x150+308+326
*warnWindow.rootTransient:		True
*warnWindow*Label.Center: 		True
*warnWindow*Label.font:			*-times-medium-r-*--18-*
*warnOKLabel.label:			OK
*dashLogo.icon:				Dash.xbm

*warnForm.padding:			2
*warnForm.form:				dashLogo: 0 0 - -		\
					warn1Label: 0 dashLogo 100 -	\
					warn2Label: 0 warn1Label 100 -	\
					warnOKWindow: 40 - 60 95

! ***************************** WARNING *************************************
! The Console program and Dash contain a color converter which is NON-STANDARD.
! The syntax for the following resources should not be used when specifying
! resources for other programs, as it will generate a warning from that
! program.
!
! Also, the color converter does not deal with the "reverseVideo" resource,
! for reasons too complicated to explain here.
!
! Having said all that...  when writing a color spec, you can use up to three
! comma-seperated colors, which are applied as follows:
!   - if three colors are given, they specify the color to use on mono,
!     grayscale and color monitors, respectively.
!   - if only two colors are given, the first is used for both mono and
!     grayscale, and the second is for color.
!   - if only one color is given, it is used for all three visual classes.
!

*foreground:			black,black,midnightblue
*background:			white,gray85,CadetBlue2

!
! Quit Dash dialog
!
*quitDialog.tree:                                               \
{                                                               \
  Window window;                                                \
    {                                                           \
      Form form;                                                \
        {                                                       \
          Label dashLogo;                                       \
          Label question;                                       \
          Window yes; { Button yes; { Label yes; } }            \
          Window no; { Button no; { Label no; } }               \
        }                                                       \
    }                                                           \
}
 
*quitDialog.window.mapped:            False
*quitDialog*form.form:                dashLogo: 0 0 - -         \
                                        yes: 10 - - 95          \
                                        no: - - 90 95           \
                                        question: 0 35 100 -
*quitDialog*form.padding:             2
 
*quitDialog*window.geometry:          415x150+318+326
*quitDialog*window.title:             You sure?
*quitDialog*window.rootTransient:     True
 
*quitDialog*Label.font:               *-times-medium-r-*--18-*
*quitDialog*yes.label:                Yes, quit Dash
*quitDialog*yes.activateProc:         unmapTree("quitDialog"),quit()
*quitDialog*no.label:                 No, keep Dash running
*quitDialog*no.activateProc:          unmapTree("quitDialog")
*quitDialog*question.label:           Do you really want to quit Dash?
*quitDialog*question.font:            *-times-medium-i-*--24-*
*quitDialog*question.Center:          True
