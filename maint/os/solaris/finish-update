#!/sbin/sh

# If an update is in progress, complete it.

case "$1" in
start)
	state=`awk '{a=$5} END {print a}' /etc/athena/version`
	case "$state" in
	Install)
		newvers=`awk '{a=$6} END {print a}' /etc/athena/version`
		if [ ! -r /srvd/install/finish-install ]; then
			echo "Cannot finish partially completed install."
			echo "Please contact Athena Hotline at x3-1410.  Thank"
			echo "you. -Athena Operations"
			/bin/athena/tcsh
		fi
		sh /srvd/install/finish-install "$newvers" 2>&1 \
			| tee -a /var/athena/install.log
		;;
	Reboot)
		method=`awk '{a=$6} END {print a}' /etc/athena/version`
		newvers=`awk '{a=$7} END {print a}' /etc/athena/version`

		if [ ! -r /srvd/usr/athena/lib/update/finish-update ]; then
			echo "Cannot finish partially completed update."
			echo "Please contact Athena Hotline at x3-1410.  Thank"
			echo "you. -Athena Operations"
			/bin/athena/tcsh
		fi

		# We get run before bind and inetsvc (since we don't want 
		# to run inetd), which means named isn't running.  Run it.
		/etc/athena/named

		# Make sure we see the right cells as setuid.
		sh /etc/athena/config_afs

		echo "Finishing partially completed update"
		sh /srvd/usr/athena/lib/update/finish-update "$newvers" 2>&1 \
			| tee -a /var/athena/update.log

		if [ "$method" = Manual ]; then
			echo "The update to version $newvers is complete.  You"
			echo "may now examine the system before rebooting it"
			echo "under $newvers.  When you are finished, type"
			echo "'exit' and the system will reboot.  The shell"
			echo "prompt below is for a /bin/athena/tcsh process,"
			echo "regardless of what root's shell normally is."
			echo ""
			/bin/athena/tcsh
		fi

		echo "Update completed, rebooting in 15 seconds."
		sync
		sleep 15
		exec reboot
		;;
	ClearSwap)
		method=`awk '{a=$6} END {print a}' /etc/athena/version`
		newvers=`awk '{a=$7} END {print a}' /etc/athena/version`

		UPDATE_ROOT=/
		SUNPLATFORM=`uname -m`
		export UPDATE_ROOT SUNPLATFORM

		. /srvd/usr/athena/lib/update/update-environment
		. $CONFDIR/rc.conf

		# We get run before bind and inetsvc (since we don't want 
		# to run inetd), which means named isn't running.  Run it.
		/etc/athena/named

		{ sh /install/miniroot/setup-swap-boot \
 			"$method" "$newvers" 2>&1 || {
  			echo "Please contact Athena Hotline at x3-1410."
  			echo "Thank you. -Athena Operations"
  
  			echo "Athena Workstation ($HOSTTYPE) Version Update" \
  				"`date`" >> "$CONFDIR/version"
  			exit 0
 		}; } | tee -a /var/athena/update.log

		sync
		sleep 15
		exec reboot
		;;
	# The following code executes only when booted into the miniroot.
	BootSwap)
		UPDATE_ROOT=/root
		export UPDATE_ROOT

		method=`awk '{a=$6} END {print a}' /etc/athena/version`
		newvers=`awk '{a=$7} END {print a}' /etc/athena/version`

		CONFVARS="$UPDATE_ROOT/var/athena/update.confvars"
		. $CONFVARS

		PATH=/sbin:/usr/bin:/usr/sbin
		export PATH

		echo "Get the rootdrive...."
		rrootdrive=`cat /etc/vfstab | awk '$3 == "/root" {print $2}'`
		rootdrive=`cat /etc/vfstab | awk '$3 == "/root" {print $1}'`

		umask 022

		# Make symlinks from our real root to the root we're
		# installing into. For /srvd, /os, and /install, attach
		# was done into the UPDATE_ROOT before we rebooted to
		# get here, so we don't have to do the attach again. For
		# /afs, AFS is going to be mounted in UPDATE_ROOT.
		for i in /srvd /os /install; do
			rm -f "$i"
			ln -s "$UPDATE_ROOT$i" "$i"
		done

		echo "Starting AFS filesystem"
		modload /kernel/fs/sparcv9/afs
		/etc/athena/afsd -nosettime -daemons 4

		rm -rf /cdrom /patches
		ln -s "$UPDATE_ROOT/install/cdrom" /cdrom
		ln -s "$UPDATE_ROOT/install/patches" /patches

		. /srvd/usr/athena/lib/update/update-environment
		. $CONFDIR/rc.conf

		if [ "$PUBLIC" = true ]; then
			echo "turn fs fast"
			/util/fastfs "$UPDATE_ROOT" fast
			/util/fastfs "$UPDATE_ROOT/usr" fast
			/util/fastfs "$UPDATE_ROOT/var" fast
		fi

		sh /srvd/usr/athena/lib/update/update-os 2>&1 \
		    | tee -a $UPDATE_ROOT/var/athena/update.log


		echo "finished update-os"		    

		platform=`uname -m`
		echo "Installing bootblocks on root "
		installboot \
		    "/os/usr/platform/$platform/lib/fs/ufs/bootblk" \
		    "$rrootdrive"

		echo "restore the boot-device in the prom"
		boot=`cat /etc/boot-device`
		/os/usr/platform/$platform/sbin/eeprom "$boot"


		echo "Updating version for reboot"
		echo "Athena Workstation ($HOSTTYPE) Version Reboot" \
			"$method $newvers `date`" >> "$CONFDIR/version"

		if [ "$PUBLIC" = true ]; then
		    echo "turn fs slow"
		    /util/fastfs "$UPDATE_ROOT" slow
		    /util/fastfs "$UPDATE_ROOT/usr" slow
		    /util/fastfs "$UPDATE_ROOT/var" slow
		fi
		sync
		sleep 15
		reboot
		;;
	esac
	;;
stop)
	;;

*)
        echo "Usage: finish-update {start|stop}"
esac
